@model IPagedList<SewingCompany.ViewModels.User.UserViewModel>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@{
    ViewBag.Title = "List of users";
}

<h2>Users</h2>
<p>
    <a class="classic-button" asp-action="Create">Create New</a>
</p>
<!--Номер страницы-->
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
<!--Список страниц-->
<div class="pull-right">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions
    {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" },
    Display = PagedListDisplayMode.IfNeeded
    })
</div>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter })
            
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter=ViewBag.CurrentFilter })

        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { sortOrder = ViewBag.RoleSortParm, currentFilter=ViewBag.CurrentFilter })
        </th>
    </tr>
    @foreach (var user in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => user.UserName)</td>
            <td>@Html.DisplayFor(modelItem => user.Email)</td>
            <td>@Html.DisplayFor(modelItem => user.RoleName)</td>
            <td>
                <form asp-action="Delete" asp-route-id="@user.Id" method="post">
                    <a class="change-button edit-button" asp-action="Edit" asp-route-id="@user.Id">Edit</a><button type="submit" class="change-button delete-button user-delete-btn">Delete</button>
                </form>
            </td>
        </tr>
    }
</table>
<!--Номер страницы-->
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
<!--Список страниц-->
<div class="pull-right">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions
    {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" },
    Display = PagedListDisplayMode.IfNeeded
    })
</div>